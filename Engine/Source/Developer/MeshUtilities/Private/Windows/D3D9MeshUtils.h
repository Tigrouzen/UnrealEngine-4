// Copyright 1998-2014 Epic Games, Inc. All Rights Reserved.

#pragma once

#if PLATFORM_WINDOWS && !UE3_LEAN_AND_MEAN

/**
 * This utility class builds on D3DX functionality. Used for editor helpers.
 */
class FD3D9MeshUtilities
{
public:
	// constructor
	FD3D9MeshUtilities();
	// destructor
	~FD3D9MeshUtilities();

	/**
	 * Generates a unique UV layout for a static mesh
	 * @param StaticMesh - The input/output mesh
	 * @param LODIndex - The LOD level
	 * @param TexCoordIndex - Index of the uv channel to overwrite or create
	 * @param bKeepExistingCoordinates - True to preserve the existing charts when packing
	 * @param MinChartSpacingPercent - Minimum distance between two packed charts (0.0-100.0)
	 * @param BorderSpacingPercent - Spacing between UV border and charts (0.0-100.0)
	 * @param bUseMaxStretch - True if "MaxDesiredStretch" should be used; otherwise "MaxCharts" is used
	 * @param InFalseEdgeIndices - Optional list of raw face edge indices to be ignored when creating UV seams
	 * @param MaxCharts - In: Max number of charts to allow; Out:Number of charts generated by the uv unwrap algorithm.
	 * @param MaxDesiredStretch - The amount of stretching allowed. 0 means no stretching is allowed, 1 means any amount of stretching can be used. 
	 * @param OutError - if unsuccessful, contains the error that occurred.
	 * @return true if successful
	 */
	bool GenerateUVs(
		struct FRawMesh& RawMesh,
		uint32 TexCoordIndex,
		float MinChartSpacingPercent,
		float BorderSpacingPercent,
		bool bUseMaxStretch,
		const TArray< int32 >* InFalseEdgeIndices,
		uint32& MaxCharts,
		float& MaxDesiredStretch,
		FText& OutError
		);

	/**
	* For quick generating lightmap uvs.
	* It copies charts from 0 uv channel and layouts them without making new charts (keeps edge splits). Additionally separates folded triangles automatically
	* Use when DXD generates ugly cuts and degenerates charts 
	* @param StaticMesh - The input/output mesh
	* @param LODIndex - The LOD level
	* @param TexCoordIndex - Index of the uv channel to overwrite or create
	* @param OutError - if unsuccessful, contains the error that occurred.
	* @return true if successful
	*/
	bool LayoutUVs(struct FRawMesh& RawMesh, uint32 TextureResolution, uint32 TexCoordIndex, FText& OutError);

private:

	HWND DummyWindowHandle;
	struct IDirect3DDevice9* Device;
	struct IDirect3D9* Direct3D;

	bool IsValid() const;
};

#endif
